graph Loops{    
    int x where x >= 0; //counter i is always positive 
    int a; 
    int y; 
    int z; 
    start normal state  B0 { 
        a = x; 
        y = 0; 
    }
    normal state  B1 { 
        y = y + 1; 
        a = a - 1; 
    }
    normal state  B2 { 
        z = y; 
    }
    trans  t1 { B0 -> B1  where  ( a != 0 );}//loop guard
    trans  t2 { B1 -> B1  where  ( a != 0 );}//loop guard
    trans  t3 { B0 -> B2 }
    trans  t4 { B1 -> B2 }
    invariant  loop_inv { z == x-(a); }//loop invariant
    goal { 
        check each 1,2 condition  (B1^{0:1})  reach (B2)
    }
}